{"version":3,"sources":["services/auth.service.js","shared/httpClient.js","services/api.service.js","state/ducks/issues.js","state/ducks/projects.js","state/ducks/index.js","shared/routes.js","screens/app/projects/_components/Projects/Projects.jsx","screens/app/projects/ProjectsContainer.jsx","screens/app/board/_components/Board/Board.jsx","screens/app/board/BoardContainer.jsx","screens/app/noaccess/_components/NoAccess/NoAccess.jsx","screens/app/_components/App/App.jsx","screens/Root.jsx","index.js","state/index.js"],"names":["user","getHeaders","Authorization","idToken","postOptions","body","headers","method","JSON","stringify","putOptions","handleResponse","response","status","json","get","path","a","fetch","then","post","put","destroy","API","process","REACT_APP_API_URL","PROJECTS","ISSUES","id","getProjects","addProject","updateProject","deleteProject","getIssues","projectId","addIssue","updateIssue","deleteIssue","saveSaga","loadSaga","deleteSaga","LOAD","CLEAR","SAVE","DELETE","UPDATE_LIST","updateList","issues","type","state","action","issue","select","call","api","map","i","filter","saga","takeLatest","projects","project","p","rootSaga","combineReducers","all","issuesSaga","projectsSaga","Projects","load","this","props","clear","save","key","to","name","onClick","description","React","Component","mapDispatchToProps","connect","Board","match","params","title","withRouter","NoAccess","App","firstName","lastName","localStorage","removeItem","console","debug","location","href","REACT_APP_AUTH_URL","encodeURIComponent","REACT_APP_AUTH_CLIENT_ID","REACT_APP_GUI_URL","ROUTES","Root","item","getItem","parse","token","claims","jwtDecode","sub","login","email","family_name","setItem","loginCallback","init","setTimeout","store","initialState","sagaMiddleware","createSagaMiddleware","middleware","applyMiddleware","createStore","reducer","run","configureStore","render","document","getElementById"],"mappings":"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","file":"static/js/main.99a8325f.chunk.js","sourcesContent":["import jwtDecode from 'jwt-decode';\n\nconst localStorageKey = 'issuedex-user';\nlet user;\n\nconst login = () => {\n  //eslint-disable-next-line\n  location.href = `${\n    process.env.REACT_APP_AUTH_URL\n  }/login?client_id=${encodeURIComponent(\n    process.env.REACT_APP_AUTH_CLIENT_ID,\n  )}&redirect_uri=${encodeURIComponent(\n    `${process.env.REACT_APP_GUI_URL}`,\n  )}&response_type=token&scope=${encodeURIComponent('openid profile email')}`;\n};\n\nconst loginCallback = () => {\n  //eslint-disable-next-line\n  const [token] = location.href.match(/(?<=id_token=)[^&]*/);\n  const claims = jwtDecode(token);\n  user = {\n    id: claims.sub,\n    login: claims.email,\n    firstName: claims.name,\n    lastName: claims.family_name,\n    idToken: token,\n  };\n  localStorage.setItem(localStorageKey, JSON.stringify(user));\n  console.debug(`User login successful.`);\n  console.debug(`${user.id} ${user.login} ${user.firstName} ${user.lastName}`);\n};\n\nconst isTokenPresent = () => {\n  //eslint-disable-next-line\n  return location.href.match(/(?<=id_token=)[^&]*/);\n};\n\nexport const logout = () => {\n  localStorage.removeItem(localStorageKey);\n  console.debug('User deleted from the local storage');\n  //eslint-disable-next-line\n  location.href = `${\n    process.env.REACT_APP_AUTH_URL\n  }/logout?client_id=${encodeURIComponent(\n    process.env.REACT_APP_AUTH_CLIENT_ID,\n  )}&logout_uri=${encodeURIComponent(`${process.env.REACT_APP_GUI_URL}`)}`;\n};\n\nexport const init = () => {\n  const item = localStorage.getItem(localStorageKey);\n  if (item) {\n    user = JSON.parse(item);\n    console.debug('User loaded from local storage');\n  } else {\n    if (isTokenPresent()) {\n      loginCallback();\n    } else {\n      console.debug(\n        'User not present in local storage, redirecting to login page',\n      );\n      login();\n    }\n  }\n};\n\nexport const getToken = () => user.idToken;\nexport const getUser = () => user;\n","import { getToken } from '../services/auth.service';\n\nconst getHeaders = () => ({\n  'Content-Type': 'application/json',\n  Authorization: `Bearer ${getToken()}`,\n});\n\nconst getOptions = () => ({\n  headers: getHeaders(),\n});\nconst postOptions = body => ({\n  headers: getHeaders(),\n  method: 'POST',\n  body: JSON.stringify(body),\n});\nconst putOptions = body => ({\n  headers: getHeaders(),\n  method: 'PUT',\n  body: JSON.stringify(body),\n});\nconst deleteOptions = () => ({\n  headers: getHeaders(),\n  method: 'DELETE',\n});\n\nconst handleResponse = response => {\n  if (response.status >= 400) {\n    throw response.json();\n  }\n  return response.json();\n};\n\nexport const get = async path =>\n  await fetch(path, getOptions()).then(handleResponse);\nexport const post = async (path, body) =>\n  await fetch(path, postOptions(body)).then(handleResponse);\nexport const put = async (path, body) =>\n  await fetch(path, putOptions(body)).then(handleResponse);\nexport const destroy = async path =>\n  await fetch(path, deleteOptions()).then(handleResponse);\n","import { get, post, put, destroy } from '../shared/httpClient';\n\nconst API = process.env.REACT_APP_API_URL;\nconst PROJECTS = `${API}/projects`;\nconst ISSUES = id => `${PROJECTS}/${id}/issues`;\n\n// Projects\n\nexport const getProjects = async () =>\n  await get(`${PROJECTS}`);\nexport const getProject = async id =>\n  await get(`${PROJECTS}/${id}`);\nexport const addProject = async (body) =>\n  await post(`${PROJECTS}`, body);\nexport const updateProject = async (id, body) =>\n  await put(`${PROJECTS}/${id}`, body);\nexport const deleteProject = async id =>\n  await destroy(`${PROJECTS}/${id}`);\n\n// Issues\n\nexport const getIssues = async projectId =>\n  await get(`${ISSUES(projectId)}`);\nexport const getIssue = async (projectId, id) =>\n  await get(`${ISSUES(projectId)}/${id}`);\nexport const addIssue = async (projectId, body) =>\n  await post(`${ISSUES(projectId)}`, body);\nexport const updateIssue = async (projectId, id, body) =>\n  await put(`${ISSUES(projectId)}/${id}`, body);\nexport const deleteIssue = async (projectId, id) =>\n  await destroy(`${ISSUES(projectId)}/${id}`);\n  ","import {\n  put,\n  takeLatest,\n  fork,\n  call,\n  take,\n  select,\n  race,\n} from 'redux-saga/effects';\nimport * as api from '../../services/api.service';\n\n// Actions\nexport const MAKE_REQUEST = 'issuedex/issues/MAKE_REQUEST';\nexport const REQUEST_SUCCESS = 'issuedex/issues/REQUEST_SUCCESS';\nexport const REQUEST_FAILURE = 'issuedex/issues/REQUEST_FAILURE';\n\nexport const LOAD = 'issuedex/issues/LOAD';\nexport const CLEAR = 'issuedex/issues/CLEAR';\nexport const LOADED = 'issuedex/issues/LOADED';\nexport const ADD = 'issuedex/issues/ADD';\nexport const SAVE = 'issuedex/issues/SAVE';\nexport const START = 'issuedex/issues/START';\nexport const CLOSE = 'issuedex/issues/CLOSE';\nexport const CREATED = 'issuedex/issues/CREATED';\nexport const UPDATED = 'issuedex/issues/UPDATED';\nexport const DELETE = 'issuedex/issues/DELETE';\nexport const DELETED = 'issuedex/issues/DELETED';\n\nexport const UPDATE_LIST = 'issuedex/issues/UPDATE_LIST';\n\n// Reducer\nexport default (state = [], action) => {\n  switch (action.type) {\n    case UPDATE_LIST:\n      return action.issues;\n    case CLEAR:\n      return [];\n    default:\n      return state;\n  }\n};\n\n// Action Creators\nexport const add = () => ({ type: ADD });\nexport const save = (issue) => ({ type: SAVE, issue });\nexport const destroy = issue => ({ type: DELETE, issue });\nexport const load = projectId => ({ type: LOAD, projectId });\nexport const clear = () => ({ type: CLEAR });\nexport const start = issue => ({ type: START, issue });\nexport const close = issue => ({ type: CLOSE, issue });\nexport const updateList = issues => ({ type: UPDATE_LIST, issues });\n\n// Selectors\nexport const getIssues = state => state.issues;\n\n// Side Effects\nfunction* saveSaga(action) {\n  const { issue } = action;\n  const issues = yield select(getIssues);\n\n  if (issue.id) {\n    const json = yield call(api.updateIssue, issue.projectId, issue.id, issue);\n    yield put(updateList(issues.map(i => (i === issue.id ? json : i))));\n  } else {\n    const json = yield call(api.addIssue, issue.projectId, issue);\n    yield put(updateList([...issues, json]));\n  }\n}\n\nfunction* loadSaga(action) {\n  const { projectId } = action;\n  const json = yield call(api.getIssues, projectId);\n  yield put(updateList(json));\n}\n\nfunction* deleteSaga(action) {\n  const { issue } = action;\n  const issues = yield select(getIssues);\n  yield call(api.deleteIssue, issue.projectId, issue.id);\n  yield put(updateList(issues.filter(i => i.id !== issue.id)));\n}\n\nexport const saga = [\n  takeLatest(SAVE, saveSaga),\n  takeLatest(LOAD, loadSaga),\n  takeLatest(DELETE, deleteSaga),\n];\n","import {\n  put,\n  takeLatest,\n  fork,\n  call,\n  take,\n  select,\n  race,\n} from 'redux-saga/effects';\nimport * as api from '../../services/api.service';\n\n// Actions\nexport const MAKE_REQUEST = 'issuedex/projects/MAKE_REQUEST';\nexport const REQUEST_SUCCESS = 'issuedex/projects/REQUEST_SUCCESS';\nexport const REQUEST_FAILURE = 'issuedex/projects/REQUEST_FAILURE';\n\nexport const LOAD = 'issuedex/projects/LOAD';\nexport const CLEAR = 'issuedex/projects/CLEAR';\nexport const LOADED = 'issuedex/projects/LOADED';\nexport const ADD = 'issuedex/projects/ADD';\nexport const SAVE = 'issuedex/projects/SAVE';\nexport const CREATED = 'issuedex/projects/CREATED';\nexport const UPDATED = 'issuedex/projects/UPDATED';\nexport const DELETE = 'issuedex/projects/DELETE';\nexport const DELETED = 'issuedex/projects/DELETED';\n\nexport const UPDATE_LIST = 'issuedex/projects/UPDATE_LIST';\n\n// Reducer\nexport default (state = [], action) => {\n  switch (action.type) {\n    case UPDATE_LIST:\n      return action.projects;\n    case CLEAR:\n      return [];\n    default:\n      return state;\n  }\n};\n\n// Action Creators\nexport const add = () => ({ type: ADD });\nexport const save = project => ({ type: SAVE, project });\nexport const destroy = project => ({ type: DELETE, project });\nexport const load = () => ({ type: LOAD });\nexport const clear = () => ({ type: CLEAR });\nexport const updateList = projects => ({ type: UPDATE_LIST, projects });\n\n// Selectors\nexport const getProjects = state => state.projects;\n\n// Side Effects\nfunction* saveSaga(action) {\n  const { project } = action;\n  const projects = yield select(getProjects);\n\n  if (project.id) {\n    const json = yield call(api.updateProject, project.id, project);\n    yield put(updateList(projects.map(i => (i === project.id ? json : i))));\n  } else {\n    const json = yield call(api.addProject, project);\n    yield put(updateList([...projects, json]));\n  }\n}\n\nfunction* loadSaga(action) {\n  const json = yield call(api.getProjects);\n  yield put(updateList(json));\n}\n\nfunction* deleteSaga(action) {\n  const { project } = action;\n  const projects = yield select(getProjects);\n  yield call(api.deleteProject, project.id);\n  yield put(updateList(projects.filter(p => p.id !== project.id)));\n}\n\nexport const saga = [\n  takeLatest(SAVE, saveSaga),\n  takeLatest(LOAD, loadSaga),\n  takeLatest(DELETE, deleteSaga),\n];\n","import { combineReducers } from 'redux';\nimport { all } from 'redux-saga/effects';\nimport issues, { saga as issuesSaga } from './issues';\nimport projects, { saga as projectsSaga } from './projects';\n\nexport default combineReducers({\n  issues,\n  projects,\n});\n\nexport function* rootSaga() {\n  yield all([...issuesSaga, ...projectsSaga]);\n}\n","export default {\n    PROJECTS: '/projects',\n    BOARD: '/board/project/:id',\n    NO_ACCESS: '/404'\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Projects extends React.Component {\n  componentDidMount() {\n    const { load } = this.props;\n    load();\n  }\n\n  componentWillUnmount() {\n    const { clear } = this.props;\n    clear();\n  }\n\n  render() {\n    const { projects, destroy, save } = this.props;\n    return (\n      <div>\n        <div>Projects</div>\n        {projects.map(project => (\n          <div key={project.id}>\n            <Link to={`/board/project/${project.id}`}>{project.name}</Link>\n            <div onClick={() => destroy(project)}>DELETE ME</div>\n          </div>\n        ))}\n        <div\n          onClick={() =>\n            save({\n              name: 'no i kolejny',\n              description: 'JAJAJJ super opis',\n            })\n          }\n        >\n          A TUTAJ DODAM NOWY!!!!\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  destroy,\n  getProjects,\n  load,\n  clear,\n  save,\n} from '../../../state/ducks/projects';\nimport { Projects } from './_components';\n\nconst ProjectsContainer = props => <Projects {...props} />;\n\nconst mapStateToProps = state => ({\n  projects: getProjects(state),\n});\n\nconst mapDispatchToProps = {\n  load,\n  clear,\n  save,\n  destroy,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ProjectsContainer);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Board extends React.Component {\n  componentDidMount() {\n    const { load, match } = this.props;\n    load(match.params.id);\n  }\n\n  componentWillUnmount() {\n    const { clear } = this.props;\n    clear();\n  }\n\n  render() {\n    const { issues, destroy, match, save } = this.props;\n    const projectId = match.params.id;\n    return (\n      <div>\n        <div>Board</div>\n        <div>\n          <Link to=\"/projects\">Back</Link>\n        </div>\n        {issues.map(issue => (\n          <div key={issue.id}>\n            <div>{issue.title}</div>\n            <div onClick={() => destroy(issue)}>DELETE ISSUE</div>\n          </div>\n        ))}\n        <div\n          onClick={() =>\n            save({\n              projectId,\n              title: 'super issue',\n              description: 'Opisek',\n            })\n          }\n        >\n          HAHA DODAJ NEXT\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { destroy, getIssues, load, save, clear } from '../../../state/ducks/issues';\nimport { Board } from './_components';\n\nconst BoardContainer = props => <Board {...props} />;\n\nconst mapStateToProps = (state) => ({\n  issues: getIssues(state),\n});\n\nconst mapDispatchToProps = {\n  load,\n  save,\n  destroy,\n  clear,\n};\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BoardContainer));\n","import React from 'react';\n\nconst NoAccess = props => <div>NO ACCESS</div>\n\nexport default NoAccess","import { Route, Switch, Redirect } from 'react-router-dom';\nimport ROUTES from '../../../../shared/routes';\n\nimport React from 'react';\nimport ProjectContainer from '../../projects';\nimport BoardContainer from '../../board';\nimport NoAccess from '../../noaccess';\nimport {logout, getUser} from '../../../../services/auth.service';\n\nconst App = () => {\n  const user = getUser();\n  return (\n    <div id=\"app\">\n      TO JE APP {user.firstName} - {user.lastName}\n      <div onClick={() => logout()}>LOGOUT</div>\n      <Switch>\n        <Route path={ROUTES.PROJECTS}>\n          <ProjectContainer />\n        </Route>\n        <Route path={ROUTES.BOARD}>\n          <BoardContainer />\n        </Route>\n        <Route path={ROUTES.NO_ACCESS}>\n          <NoAccess />\n        </Route>\n        <Redirect to={ROUTES.PROJECTS}></Redirect>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport App from './app';\n\nconst Root = () => <App />;\n\nexport default Root;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './state';\nimport Root from './screens/Root';\nimport { BrowserRouter } from 'react-router-dom';\nimport {init } from './services/auth.service';\n\ninit();\n\nsetTimeout(() => {\n  const store = configureStore({});\n\n  render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <Root />\n      </BrowserRouter>\n    </Provider>,\n    document.getElementById('root'),\n  );\n}, 500);\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer, { rootSaga } from './ducks';\n\nexport default function configureStore(initialState) {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const middleware =\n    process.env.NODE_ENV === 'production'\n      ? applyMiddleware(sagaMiddleware)\n      : composeWithDevTools(applyMiddleware(sagaMiddleware));\n\n  const store = createStore(reducer, initialState, middleware);\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n}\n"],"sourceRoot":""}